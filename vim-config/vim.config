" 不要使用vi的键盘模式，而是vim自己的
set nocompatible
set fdm=syntax
set nocursorline
" 用空格键来开关折叠
nnoremap <Space><space> @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')<CR>

" 显示tab和空格
set list
" 设置tab和空格样式
set lcs=tab:\|\ ,nbsp:%,trail:-
" 设定行首tab为灰色
highlight LeaderTab guifg=#666666
" 匹配行首tab
match LeaderTab /^\t/

" 语法高亮
set syntax=on
" 在处理未保存或只读文件的时候，弹出确认
set confirm

" 自动缩进
set autoindent
set cindent
set smartindent
" Tab键的宽度
set tabstop=2
" 统一缩进为2
set softtabstop=2
set shiftwidth=2
" 不要用空格代替制表符
set noexpandtab
" 在行和段开始处使用制表符
set smarttab

" 显示行号
set number
set relativenumber

let &termencoding=&encoding
set fileencodings=utf-8,gbk,ucs-bom,cp936

" 可以在buffer的任何地方使用鼠标（类似office中在工作区双击鼠标定位）
set mouse=a
set selection=exclusive
set selectmode=mouse,key

"搜索逐字符不高亮
set nohlsearch
set incsearch

"自动对齐 markdown 表格
map 1 :Tab/\|<CR>
map 2 :Tab/=<CR>

map <F3> gg=G<CR>

execute pathogen#infect()
let g:EasyMotion_leader_key='<Space>'
" Add spaces after comment delimiters by default
let g:NERDSpaceDelims = 1

" Use compact syntax for prettified multi-line comments
let g:NERDCompactSexyComs = 1

" Align line-wise comment delimiters flush left instead of following code indentation
let g:NERDDefaultAlign = 'left'

" Set a language to use its alternate delimiters by default
let g:NERDAltDelims_java = 1

" Add your own custom formats or override the defaults
let g:NERDCustomDelimiters = { 'c': { 'left': '/**','right': '*/' } }

" Allow commenting and inverting empty lines (useful when commenting a region)
let g:NERDCommentEmptyLines = 1

" Enable trimming of trailing whitespace when uncommenting
let g:NERDTrimTrailingWhitespace = 1
